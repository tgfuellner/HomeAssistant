homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 48.1887
  longitude: 12.1245
 
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 554
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Berlin
  # Customization file
  customize: !include customize.yaml

logger:
  default: info
  #default: debug

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

# Uncomment this if you are using SSL/TLS, running in Docker container, etc.
# http:
#   base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

timer:
  charge_sleep_period:
    name: Time to wait after automation stopped wallbox
    duration: '00:05:00'

input_boolean:
  pause_charging:
    name: Pausiere den ZOE Ladevorgang
    initial: off
    icon: mdi:car

notify:
  - name: gmail
    platform: smtp
    server: smtp.gmail.com
    port: 587
    timeout: 15
    sender: thomas.gfuellner@gmail.com
    encryption: starttls
    username: thomas.gfuellner@gmail.com
    password: !secret gmail_password
    recipient:
      - thomas.gfuellner@gmail.com
    sender_name: Mein Home Assistant

# Sensors
sensor:
  # Weather prediction
  - platform: yr
  - platform: mqtt
    name: "Boiler"
    unit_of_measurement: "°C"
    state_topic: "tele/pumpe/SENSOR"
    value_template: '{{ value_json["DS18S20"]["Temperature"] }}'
    availability_topic: "tele/pumpe/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "GarageTemp"
    unit_of_measurement: "°C"
    state_topic: "tele/wallbox/SENSOR"
    value_template: '{{ value_json["AM2301"]["Temperature"] }}'
    availability_topic: "tele/wallbox/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "GarageHum"
    unit_of_measurement: "%"
    device_class: humidity
    state_topic: "tele/wallbox/SENSOR"
    value_template: '{{ value_json["AM2301"]["Humidity"] }}'
    availability_topic: "tele/wallbox/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "SchreibtischThomas"
    unit_of_measurement: "Watt"
    state_topic: "tele/cothomas/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    availability_topic: "tele/cothomas/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "TV"
    unit_of_measurement: "Watt"
    state_topic: "tele/tv/SENSOR"
    value_template: '{{ value_json["ENERGY"]["Power"] }}'
    availability_topic: "tele/tv/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"
  - platform: mqtt
    name: "Waschen,WC,Speis P"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/0/power"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Waschen,WC,Speis E"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/0/energy"
    value_template: "{{(value | int) / 100}}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Wohnzimmer P"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/1/power"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Wohnzimmer E"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/1/energy"
    value_template: "{{(value | int) / 100}}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Gang EG P"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/2/power"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Gang EG E"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/2/energy"
    value_template: "{{(value | int) / 100}}"
    unit_of_measurement: "kWh"
  - platform: mqtt
    name: "Licht Küche, Speis P"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/3/power"
    unit_of_measurement: "Watt"
  - platform: mqtt
    name: "Licht Küche, Speis E"
    value_template: "{{(value | int) / 100}}"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/3/energy"
    unit_of_measurement: "kWh"
  - platform: rest
    name: JSON sonnen
    json_attributes:
      - Consumption_W
      - GridFeedIn_W
      - Production_W
      - USOC
      - Pac_total_W
    resource: http://192.168.0.115:8080/api/v1/status
    value_template: '{{ value_json.sonnen }}'
  - platform: template
    sensors:
      sonnen_stromverbrauch:
        friendly_name: 'Verbrauch'
        unit_of_measurement: "Watt"
        value_template: '{{ states.sensor.json_sonnen.attributes["Consumption_W"] }}'
      sonnen_stromeinspeisung:
        friendly_name: 'Einspeisung'
        unit_of_measurement: "Watt"
        value_template: '{{ states.sensor.json_sonnen.attributes["GridFeedIn_W"] }}'
      sonnen_stromerzeugung:
        friendly_name: 'Produktion'
        unit_of_measurement: "Watt"
        value_template: '{{ states.sensor.json_sonnen.attributes["Production_W"] }}'
      sonnen_soc:
        friendly_name: 'SOC'
        unit_of_measurement: "%"
        value_template: '{{ states.sensor.json_sonnen.attributes["USOC"] }}'
      sonnen_stromspeicher:
        friendly_name: 'Batterie'
        unit_of_measurement: "Watt"
        value_template: '{{ states.sensor.json_sonnen.attributes["Pac_total_W"] }}'
      sonnen_einspeise_minus_speicher:
        friendly_name: 'Batterie'
        unit_of_measurement: "Watt"
        value_template: '{{ states.sensor.json_sonnen.attributes["GridFeedIn_W"] - states.sensor.json_sonnen.attributes["Pac_total_W"] }}'

# Für Tasmota Schalter ist "SetOption59 1" nötig
switch:
  - platform: mqtt
    name: "Umwälzpumpe"
    state_topic: "tele/pumpe/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/pumpe/POWER"
    availability_topic: "tele/pumpe/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "SchreibtischThomas"
    state_topic: "tele/cothomas/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/cothomas/POWER"
    availability_topic: "tele/cothomas/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "TV"
    state_topic: "tele/tv/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/tv/POWER"
    availability_topic: "tele/tv/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "WallBox"
    state_topic: "tele/wallbox/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/wallbox/POWER"
    availability_topic: "tele/wallbox/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "Leiste"
    state_topic: "tele/leiste/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/leiste/POWER"
    availability_topic: "tele/leiste/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "Charger"
    state_topic: "tele/charger/STATE"
    value_template: "{{ value_json.POWER }}"
    command_topic: "cmnd/charger/POWER"
    availability_topic: "tele/charger/LWT"
    qos: 1
    payload_on: "ON"
    payload_off: "OFF"
    payload_available: "Online"
    payload_not_available: "Offline"
    retain: false
  - platform: mqtt
    name: "Waschen,WC,Speis"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/0"
    command_topic: "shellies/shelly4pro-4BCBE4/relay/0/command"
    payload_on: "on"
    payload_off: "off"
    retain: false
  - platform: mqtt
    name: "Wohnzimmer"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/1"
    command_topic: "shellies/shelly4pro-4BCBE4/relay/1/command"
    payload_on: "on"
    payload_off: "off"
    retain: false
  - platform: mqtt
    name: "Gang EG"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/2"
    command_topic: "shellies/shelly4pro-4BCBE4/relay/2/command"
    payload_on: "on"
    payload_off: "off"
    retain: false
  - platform: mqtt
    name: "Licht Küche, Speis"
    state_topic: "shellies/shelly4pro-4BCBE4/relay/3"
    command_topic: "shellies/shelly4pro-4BCBE4/relay/3/command"
    payload_on: "on"
    payload_off: "off"
    retain: false

history_graph:
  sonnen4:
    entities:
      - sensor.sonnen_stromverbrauch
      - sensor.sonnen_stromerzeugung
      - sensor.sonnen_stromeinspeisung
      - sensor.sonnen_stromspeicher
    hours_to_show: 4
    refresh: 0
  sonnen12:
    entities:
      - sensor.sonnen_stromverbrauch
      - sensor.sonnen_stromerzeugung
      - sensor.sonnen_stromeinspeisung
      - sensor.sonnen_stromspeicher
    hours_to_show: 12
    refresh: 0
  sonnen24:
    entities:
      - sensor.sonnen_stromverbrauch
      - sensor.sonnen_stromerzeugung
      - sensor.sonnen_stromeinspeisung
      - sensor.sonnen_stromspeicher
    hours_to_show: 24
    refresh: 0
  sonnen_woche:
    entities:
      - sensor.sonnen_stromverbrauch
      - sensor.sonnen_stromerzeugung
      - sensor.sonnen_stromeinspeisung
      - sensor.sonnen_stromspeicher
    hours_to_show: 168
    refresh: 0


# Text to speech
tts:
  - platform: google

# Cloud
cloud:

mqtt:
  broker: "localhost"
  username: "dev"
  password: !secret mqtt_dev_password

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml

